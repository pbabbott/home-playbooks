- name: Drone Docker Installations on RPI (not root)
  hosts: dumbledore
  vars:
      drone_github_client_id: "{{ drone.github_client_id }}"
      drone_github_client_secret: "{{ drone.github_client_secret }}"
      drone_shared_secret: "{{ drone.shared_secret }}"
  tasks:
    - name: Ensure drone data directory exists
      ansible.builtin.file:
        path: "{{ drone_data_dir }}"
        state: directory
        mode: '0755'
    - name: Setup drone server
      community.docker.docker_compose:
        project_name: drone_server
        definition:
          version: '3'
          services:
            drone_server:
              container_name: drone
              image: drone/drone:2
              environment:
                DRONE_GITHUB_CLIENT_ID: "{{ drone_github_client_id }}"
                DRONE_GITHUB_CLIENT_SECRET: "{{ drone_github_client_secret }}"
                DRONE_RPC_SECRET: "{{ drone_shared_secret }}"
                DRONE_SERVER_HOST: "{{ drone_server_host }}"
                DRONE_SERVER_PROTO: https
                DRONE_USER_FILTER: "{{ drone_server_user_filter }}"
                DRONE_USER_CREATE: "username:{{ drone_server_admin }},admin:true"
              volumes:
                - "{{ drone_data_dir }}:/data"
              restart: unless-stopped
              ports:
                - 9926:80

# TODO: Setup x86 drone runner configuration with ansible.
- name: Drone runner on dumbledore
  hosts: dumbledore
  vars:
    drone_shared_secret: "{{ drone.shared_secret }}"
  tasks:
    - name: Setup drone runner
      community.docker.docker_compose:
        project_name: drone_runner
        definition:
          version: '3'
          services:
            drone_server:
              container_name: drone_runner
              image: drone/drone-runner-docker:1
              environment:
                DRONE_RPC_PROTO: https
                DRONE_RPC_HOST: "{{ drone_server_host }}"
                DRONE_RPC_SECRET: "{{ drone_shared_secret }}"
                DRONE_RUNNER_CAPACITY: 2
                DRONE_RUNNER_NAME: "{{ drone_runner_name }}"
              restart: always
              ports:
                - 3000:3000
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock

- name: Traefik configuration for drone
  hosts: bananapi
  roles:
    - role: home.traefik_app
      traefik_app_file_name: 'drone.yml'
